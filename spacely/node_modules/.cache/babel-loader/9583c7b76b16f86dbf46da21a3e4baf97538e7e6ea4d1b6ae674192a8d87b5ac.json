{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nrg24\\\\Downloads\\\\Proyecto Spacely\\\\spacely\\\\src\\\\components\\\\rss\\\\rssfeed.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction RssFeed() {\n  _s();\n  const [rssContent, setRssContent] = useState('');\n  useEffect(() => {\n    // Realizar solicitud HTTP para cargar el contenido de rss.xml\n    axios.get('/rss.xml').then(response => {\n      // Obtener el contenido del archivo rss.xml\n      const rssData = response.data;\n\n      // Actualizar el estado con el contenido del archivo rss.xml\n      setRssContent(rssData);\n    }).catch(error => {\n      console.error('Error al cargar el archivo rss.xml', error);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"pre\", {\n      children: rssContent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n_s(RssFeed, \"QGTFQYs1QBGP2I1QYCEt8xGAmqA=\");\n_c = RssFeed;\nexport default RssFeed;\nvar _c;\n$RefreshReg$(_c, \"RssFeed\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","RssFeed","_s","rssContent","setRssContent","get","then","response","rssData","data","catch","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/nrg24/Downloads/Proyecto Spacely/spacely/src/components/rss/rssfeed.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction RssFeed() {\r\n  const [rssContent, setRssContent] = useState('');\r\n\r\n  useEffect(() => {\r\n    // Realizar solicitud HTTP para cargar el contenido de rss.xml\r\n    axios.get('/rss.xml')\r\n      .then(response => {\r\n        // Obtener el contenido del archivo rss.xml\r\n        const rssData = response.data;\r\n\r\n        // Actualizar el estado con el contenido del archivo rss.xml\r\n        setRssContent(rssData);\r\n      })\r\n      .catch(error => {\r\n        console.error('Error al cargar el archivo rss.xml', error);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      {/* Mostrar el contenido del archivo rss.xml */}\r\n      <pre>{rssContent}</pre>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RssFeed;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,OAAOA,CAAA,EAAG;EAAAC,EAAA;EACjB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAEhDD,SAAS,CAAC,MAAM;IACd;IACAE,KAAK,CAACO,GAAG,CAAC,UAAU,CAAC,CAClBC,IAAI,CAACC,QAAQ,IAAI;MAChB;MACA,MAAMC,OAAO,GAAGD,QAAQ,CAACE,IAAI;;MAE7B;MACAL,aAAa,CAACI,OAAO,CAAC;IACxB,CAAC,CAAC,CACDE,KAAK,CAACC,KAAK,IAAI;MACdC,OAAO,CAACD,KAAK,CAAC,oCAAoC,EAAEA,KAAK,CAAC;IAC5D,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEX,OAAA;IAAAa,QAAA,eAEEb,OAAA;MAAAa,QAAA,EAAMV;IAAU;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAO;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACnB;AAEV;AAACf,EAAA,CAxBQD,OAAO;AAAAiB,EAAA,GAAPjB,OAAO;AA0BhB,eAAeA,OAAO;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}